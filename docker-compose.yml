version: "2"

volumes:
  ? mongo_data
  ? postgres-db
  ? grafana_data

services:
  mongodb:
    expose:
      - "27017"
    hostname: mongodb
    container_name: db-mongo
    image: mongo:3.2
    stdin_open: true
    tty: true
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"

  orion:
    command: -dbhost mongodb -port 1026 -logLevel DEBUG
    depends_on:
      - mongodb
    expose:
      - "1026"
    hostname: orion
    container_name: fiware-orion
    image: fiware/orion:2.1.0
    ports:
      - "1026:1026"
    stdin_open: true
    tty: true

  iotagent-lora:
    depends_on:
      - mongodb
      - orion
    entrypoint: bin/iotagent-lora docker/config-docker.js
    hostname: iotagent-lora
    container_name: fiware-iotagent-lora
    image: ioeari/iotagent-lora
    ports:
      - "4061:4041"
    stdin_open: true
    tty: true
    
  iot-agent:
    image: fiware/iotagent-json:1.26.0
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
        - mongodb
    expose:
        - "4041"
        - "7896"
    ports:
        - "4041:4041"
        - "7896:7896"
    stdin_open: true
    tty: true
    environment:
        - IOTA_CB_HOST=orion
        - IOTA_CB_PORT=1026
        - IOTA_NORTH_PORT=4041
        - IOTA_REGISTRY_TYPE=mongodb
        - IOTA_LOG_LEVEL=DEBUG
        - IOTA_TIMESTAMP=true
        - IOTA_CB_NGSI_VERSION=v2
        - IOTA_AUTOCAST=true
        - IOTA_MONGO_HOST=mongodb
        - IOTA_MONGO_PORT=27017
        - IOTA_MONGO_DB=iotagentjson
        - IOTA_HTTP_PORT=7896
        - IOTA_PROVIDER_URL=http://iot-agent:4041
        - IOTA_DEFAULT_RESOURCE=/iot/json
    
  draco:
    depends_on:
      - postgres-db
    image:  ging/fiware-draco:1.1.0
    hostname: draco
    container_name: fiware-draco
    environment:
      - "NIFI_WEB_HTTP_PORT=9090"
    expose:
      - "5050"
      - "5051"
      - "5052"
      - "9090"
    ports:
      - "9090:9090" # localhost:9090
      - "5050:5050" # MagtelUFV1
      - "5051:5051" # MagtelUFV2
      - "5052:5052" # MagtelUFV3
    stdin_open: true
    tty: true
    healthcheck:
      test: curl --fail -s http://draco:9090/nifi-api/system-diagnostics || exit 1
      start_period: 1m
      
  postgres-db:
    image: postgres
    hostname: postgres-db
    container_name: db-postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"
    stdin_open: true
    tty: true
    environment:
      - POSTGRES_MULTIPLE_DATABASES=MagtelUFV1,MagtelUFV2,MagtelUFV3
      - POSTGRES_PASSWORD=MagboatProject
      - POSTGRES_USER=Magtel
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
      
  grafana:
    depends_on:
      - postgres-db
    image: grafana/grafana
    hostname: grafana
    container_name: fiware-grafana
    expose:
      - "3000"
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
